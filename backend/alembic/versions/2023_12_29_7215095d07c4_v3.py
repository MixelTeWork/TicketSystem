"""v3

Revision ID: 7215095d07c4
Revises: 04a896846405
Create Date: 2023-12-29 01:07:30.829129

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from sqlalchemy import orm
from sqlalchemy import text
from bfs.data.user_role import UserRole

# revision identifiers, used by Alembic.
revision: str = '7215095d07c4'
down_revision: Union[str, None] = '04a896846405'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('UserRole',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['roleId'], ['Role.id'], name=op.f('fk_UserRole_roleId_Role')),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], name=op.f('fk_UserRole_userId_User')),
    sa.PrimaryKeyConstraint('userId', 'roleId', name=op.f('pk_UserRole'))
    )
    # ### end Alembic commands ###

    bind = op.get_bind()
    session = orm.Session(bind=bind)

    users = session.execute(text("Select id, roleId From User"))
    for (userId, roleId) in users:
        session.add(UserRole(userId=userId, roleId=roleId))

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.drop_column('roleId')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.add_column(sa.Column('roleId', sa.INTEGER(), nullable=False))
        batch_op.create_foreign_key(op.f('fk_User_roleId_Role'), 'Role', ['roleId'], ['id'])

    op.drop_table('UserRole')
    # ### end Alembic commands ###
