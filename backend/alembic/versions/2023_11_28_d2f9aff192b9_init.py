"""init

Revision ID: d2f9aff192b9
Revises: 
Create Date: 2023-11-28 18:24:30.816562

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd2f9aff192b9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Event',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('active', sa.Boolean(), server_default='1', nullable=False),
    sa.Column('lastTicketNumber', sa.Integer(), server_default='0', nullable=False),
    sa.Column('lastTypeNumber', sa.Integer(), server_default='0', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Operation',
    sa.Column('id', sa.String(length=32), nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('name', sa.String(length=32), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('Permission',
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.Column('operationId', sa.String(length=32), nullable=False),
    sa.ForeignKeyConstraint(['operationId'], ['Operation.id'], ),
    sa.ForeignKeyConstraint(['roleId'], ['Role.id'], ),
    sa.PrimaryKeyConstraint('roleId', 'operationId')
    )
    op.create_table('TicketType',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('eventId', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['eventId'], ['Event.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('User',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('login', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('roleId', sa.Integer(), nullable=False),
    sa.Column('bossId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['bossId'], ['User.id'], ),
    sa.ForeignKeyConstraint(['roleId'], ['Role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_User_login'), 'User', ['login'], unique=True)
    op.create_table('Log',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('actionCode', sa.String(length=16), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('userName', sa.String(length=64), nullable=False),
    sa.Column('tableName', sa.String(length=16), nullable=False),
    sa.Column('recordId', sa.Integer(), nullable=False),
    sa.Column('changes', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('PermissionAccess',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('eventId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['eventId'], ['Event.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['User.id'], ),
    sa.PrimaryKeyConstraint('userId', 'eventId')
    )
    op.create_table('Ticket',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('createdDate', sa.DateTime(), nullable=False),
    sa.Column('createdById', sa.Integer(), nullable=False),
    sa.Column('eventId', sa.Integer(), nullable=False),
    sa.Column('typeId', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(length=32), nullable=False),
    sa.Column('scanned', sa.Boolean(), server_default='0', nullable=False),
    sa.Column('updatedDate', sa.DateTime(), nullable=True),
    sa.Column('updatedById', sa.Integer(), nullable=True),
    sa.Column('scannedDate', sa.DateTime(), nullable=True),
    sa.Column('scannedById', sa.Integer(), nullable=True),
    sa.Column('personName', sa.String(length=256), nullable=True),
    sa.Column('personLink', sa.String(length=256), nullable=True),
    sa.Column('promocode', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['createdById'], ['User.id'], ),
    sa.ForeignKeyConstraint(['eventId'], ['Event.id'], ),
    sa.ForeignKeyConstraint(['scannedById'], ['User.id'], ),
    sa.ForeignKeyConstraint(['typeId'], ['TicketType.id'], ),
    sa.ForeignKeyConstraint(['updatedById'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Ticket')
    op.drop_table('PermissionAccess')
    op.drop_table('Log')
    op.drop_index(op.f('ix_User_login'), table_name='User')
    op.drop_table('User')
    op.drop_table('TicketType')
    op.drop_table('Permission')
    op.drop_table('Role')
    op.drop_table('Operation')
    op.drop_table('Event')
    # ### end Alembic commands ###
